#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH
source $HOME/elasticsearch/lib/util


function _is_running() {
  if [ -f $ES_PID_FILE ]; then
    local zpid=$(cat $ES_PID_FILE 2> /dev/null)
    local myid=$(id -u)
    if `ps -opid,args --pid $zpid 2>&1 &> /dev/null`; then
      return 0
    fi
  fi

  return 1
}

function start() {
  if _is_running; then
    echo "ElasticSearch is already running" 1>&2
    return 0
  fi

##  _build_config

  
  echo "Starting ElasticSearch"
  ##export PUBLISH_HOST=$(python -c "import socket; print socket.gethostbyname('`hostname`')")
  ##export ES_HEAP_SIZE="`_es_heap_size`"
  
  $OPENSHIFT_ELASTICSEARCH_DIR/run/bin/elasticsearch -d -p $ES_PID_FILE
}


function stop() {
  if ! _is_running; then
    echo "ElasticSearch is already stopped" 1>&2
    return 0
  fi

  
  echo "Stopping ElasticSearch"
  if [ -f $ES_PID_FILE ]; then
    local zpid=$(cat $ES_PID_FILE 2> /dev/null)
  fi

  if [ -n $zpid ]; then
    /bin/kill $zpid
    local ret=$?
    if [ $ret -eq 0 ]; then
      local TIMEOUT=10
      while [ $TIMEOUT -gt 0 ] &&  _is_running ; do
        /bin/kill -0 "$zpid" > /dev/null 2>&1  ||  break
        sleep 1
        let TIMEOUT=${TIMEOUT}-1
      done
    fi
  fi
}

function restart() {
  stop
  start
}

function status() {
  client_result "DB is Running"
}

function deploy() {
  
}

function tidy() {

}

function update() {

}

case "$1" in
  start)             start ;;
  stop)              stop ;;
  restart | reload ) restart $1 ;;
  status)            status ;;
  deploy)            deploy ;;
  *)                 exit 0
esac
