#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH

export ES_PID_FILE="${OPENSHIFT_ELASTICSEARCH_DIR}runtime/elasticsearch.pid"

function _is_running() {
  if [ -f $ES_PID_FILE ]; then
    local pid=$(cat $ES_PID_FILE 2> /dev/null)
    if `ps -opid,args --pid $pid 2>&1 &> /dev/null`; then
      return 0
    fi
  fi

  return 1
}

function start() {
  if _is_running; then
    echo "ElasticSearch is already running" 1>&2
    return 0
  fi

  oo-erb ${OPENSHIFT_ELASTICSEARCH_DIR}conf/elasticsearch.yml.erb > ${OPENSHIFT_ELASTICSEARCH_DIR}conf/elasticsearch.yml
  oo-erb ${OPENSHIFT_ELASTICSEARCH_DIR}conf/logging.yml.erb > ${OPENSHIFT_ELASTICSEARCH_DIR}conf/logging.yml

  
  echo "Starting ElasticSearch"

  
  ${OPENSHIFT_ELASTICSEARCH_DIR}runtime/bin/elasticsearch -d  -p $ES_PID_FILE  --path.conf=${OPENSHIFT_ELASTICSEARCH_DIR}conf
}


function stop() {
  if ! _is_running; then
    echo "ElasticSearch is already stopped" 1>&2
    return 0
  fi

  
  echo "Stopping ElasticSearch"
  if [ -f $ES_PID_FILE ]; then
    local pid=$(cat $ES_PID_FILE 2> /dev/null)
  fi

  if [ -n $pid ]; then
    /bin/kill $pid
    local ret=$?
    if [ $ret -eq 0 ]; then
      local TIMEOUT=10
      while [ $TIMEOUT -gt 0 ] &&  _is_running ; do
        /bin/kill -0 "$pid" > /dev/null 2>&1  ||  break
        sleep 1
        let TIMEOUT=${TIMEOUT}-1
      done
    fi
  fi
}

function restart() {
  stop
  start
}

function status() {
  if _is_running;then
    client_result "DB is Running"
  else
    client_result "DB Not Started"
  fi
}

function deploy() {
  :
}

function tidy() {
  :
}

function update() {
  :
}

case "$1" in
  start)             start ;;
  stop)              stop ;;
  restart | reload ) restart $1 ;;
  status)            status ;;
  deploy)            deploy ;;
  *)                 exit 0
esac
